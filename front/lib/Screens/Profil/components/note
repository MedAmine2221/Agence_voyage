import 'dart:convert';
import 'dart:io';
import 'package:agence_voyage_app/Screens/Profil/components/background2.dart';
import 'package:agence_voyage_app/Screens/ResetPassword/resetpass.dart';
import 'package:agence_voyage_app/components/rounded_button.dart';
import 'package:agence_voyage_app/components/rounded_input_field.dart';
import 'package:http/http.dart' as http;
import 'package:agence_voyage_app/Screens/Login/login_screen.dart';
import 'package:agence_voyage_app/Screens/Profil/profil.dart';
import 'package:agence_voyage_app/Screens/acceuil/acceuil.dart';
import 'package:agence_voyage_app/components/menu_profil.dart';
import 'package:agence_voyage_app/components/text_field_container.dart';
import 'package:agence_voyage_app/constants.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:get/get.dart';
import 'package:agence_voyage_app/Screens/Profil/components/background.dart';
import 'package:google_nav_bar/google_nav_bar.dart';
import 'dart:async';

import 'package:line_awesome_flutter/line_awesome_flutter.dart';
import 'package:image_picker/image_picker.dart';

class Body extends StatefulWidget {
  String email;
  String nom;
  String prenom;
  String cin;
  String image;
  String genre;
  String tel;
  String passeport;
  String password;
  int age;
  int id;
  Body({
    required this.email,
    required this.nom,
    required this.prenom,
    required this.cin,
    required this.image,
    required this.id,
    required this.genre,
    required this.tel,
    required this.passeport,
    required this.password,
    required this.age,
  });
  @override
  _BodyState createState() => _BodyState();
}
class _BodyState extends State<Body> {
  /*String email = '';
  String password = '';
  String passeport = '';*/
  String SelectedImagePath = '';


  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    int _selectedIndex = 1; // Initially, the "Home" tab is selected
    Future<void> updateUserPassport(String newPassportNumber) async {
      final apiUrl = 'http://192.168.1.13:7229/api/Utilisateurs/${widget.id}';

      final response = await http.put(
        Uri.parse(apiUrl),
        headers: {
          'Content-Type': 'application/json',
        },
        body: jsonEncode({
          'Id': widget.id,
          "Nom": widget.nom,
          "Prenom": widget.prenom,
          "Age": widget.age, // Remplacez par la nouvelle valeur
          "Genre": widget.genre,
          "Image": widget.image,
          "Cin": widget.cin,
          'Num_passeport': newPassportNumber, // Update passport number
          "Email": widget.email,
          "Password": widget.password, // Si le mot de passe change
          "Num_tel": widget.tel
          // Include other fields here as needed
        }),
      );
      print(response.statusCode);

      if (response.statusCode == 200) {

        // Update was successful
        // You may want to display a success message
      } else {
        // Handle the case where the update failed
        // You may want to display an error message
      }
    }
    void showSnackBar(String message) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text(message),
        ),
      );
    }
    selectImageFromGallery() async {
      XFile? file = await ImagePicker()
          .pickImage(source: ImageSource.gallery, imageQuality: 10);
      if (file != null){
        return file.path;
      }else{
        return '';
      }
    }
    selectImageFromCamera() async {
      XFile? file = await ImagePicker()
          .pickImage(source: ImageSource.camera, imageQuality: 10);
      if (file != null){
        return file.path;
      }else{
        return '';
      }
    }
    Future selectImage(){
      return showDialog(
          context: context,
          builder: (BuildContext context){
            return Dialog(
              shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(20.0)),
              child: Container(
                height: 200,
                child: Padding(
                  padding: const EdgeInsets.all(12.0),
                  child: Column(
                    children: [
                      Text(
                        'Select Image From !',
                        style: TextStyle(
                            fontSize: 18.0,
                            fontWeight: FontWeight.bold
                        ),
                      ),
                      Expanded(
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                          children: [
                            GestureDetector(
                              onTap: () async {
                                SelectedImagePath = await selectImageFromGallery();
                                print('Image_path:-');
                                print(SelectedImagePath);
                                if (SelectedImagePath != ''){
                                  Navigator.pop(context);
                                  setState(() {

                                  });
                                }else{
                                  showSnackBar("No Image Selected !");
                                }
                              },
                              child: Card(
                                elevation: 5,
                                child: Padding(
                                  padding: const EdgeInsets.all(8.0),
                                  child: Column(
                                    children: [
                                      Image.asset(
                                        'assets/images/gallery.png',
                                        height: 60,
                                        width: 60,
                                      ),
                                      Text("Gallery"),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                            GestureDetector(
                              onTap: () async {
                                SelectedImagePath = await selectImageFromCamera();
                                print("Image_path:-");
                                print(SelectedImagePath);
                                if (SelectedImagePath != ''){
                                  Navigator.pop(context);
                                  setState(() {

                                  });
                                }else{
                                  showSnackBar("No Image Captured !");
                                }
                              },
                              child: Card(
                                elevation: 5,
                                child: Padding(
                                  padding: const EdgeInsets.all(8.0),
                                  child: Column(
                                    children: [
                                      Image.asset(
                                        'assets/images/camera.png',
                                        height: 60,
                                        width: 60,
                                      ),
                                      Text("camera"),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            );
          }
      );
    }

    return Background(
      child: SingleChildScrollView(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Edit profil',
              style: TextStyle(fontWeight: FontWeight.bold,fontSize: 40.0),
            ),
            SizedBox(height: 20.0,),
            Stack(
              children: [
                SizedBox(
                  width: 120,
                  height: 120,
                  child: ClipRRect(
                    borderRadius: BorderRadius.circular(100),
                    child: SelectedImagePath == ''
                        ? Image.file(File(widget.image))
                        :Image.file(File(SelectedImagePath)),
                  ),
                ),
                SizedBox(
                  width: 120,
                  height: 120,
                  child: ClipRRect(
                    borderRadius: BorderRadius.circular(100),
                    child: SelectedImagePath != ''
                        ? TextButton(
                          onPressed: () async {
                            final apiUrl = 'http://192.168.1.13:7229/api/Utilisateurs/${widget.id}';

                            final response = await http.put(
                              Uri.parse(apiUrl),
                              headers: {
                                'Content-Type': 'application/json',
                              },
                              body: jsonEncode({
                                'Id': widget.id,
                                "Nom": widget.nom,
                                "Prenom": widget.prenom,
                                "Age": widget.age, // Remplacez par la nouvelle valeur
                                "Genre": widget.genre,
                                "Image": SelectedImagePath,
                                "Cin": widget.cin,
                                'Num_passeport': widget.passeport, // Update passport number
                                "Email": widget.email,
                                "Password": widget.password, // Si le mot de passe change
                                "Num_tel": widget.tel
                                // Include other fields here as needed
                              }),
                            );
                            print(response.statusCode);
                          },
                          child: Text('Update Photo'),
                          )
                        :Text(''),
                  ),
                ),

                Positioned(
                  bottom: 5,  // Ajustez la position verticale de l'icône
                  right: 5,   // Ajustez la position horizontale de l'icône
                  child: GestureDetector(
                    onTap: () {
                      selectImage();
                    },
                    child: Icon(
                      Icons.edit,
                      color: Colors.indigo,
                      size: 24,
                    ),
                  ),
                ),
              ],
            ),

            SizedBox(height: 10),
            Text("${widget.nom} ${widget.prenom}",
                style: Theme.of(context).textTheme.headlineSmall),
            Text("${widget.email}",
                style: Theme.of(context).textTheme.bodyLarge),
            SizedBox(height: 20),

            SizedBox(height: 10),
            UserScreenMenu(
              title:  widget.nom,
              icon: LineAwesomeIcons.user,
              onPress: () async {
                final apiUrl = 'http://192.168.1.13:7229/api/Utilisateurs/${widget.id}';

                final response = await http.put(
                  Uri.parse(apiUrl),
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: jsonEncode({
                    'Id': widget.id,
                    "Nom": newLN,
                    "Prenom": widget.prenom,
                    "Age": widget.age, // Remplacez par la nouvelle valeur
                    "Genre": widget.genre,
                    "Image": widget.image,
                    "Cin": widget.cin,
                    'Num_passeport': widget.passeport, // Update passport number
                    "Email": widget.email,
                    "Password": widget.password, // Si le mot de passe change
                    "Num_tel": widget.tel
                    // Include other fields here as needed
                  }),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}
